Error subclass: #MiniError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Impl'!Object subclass: #MiniScope	instanceVariableNames: 'outerScope bindings'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Impl'!!MiniScope methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/6/2015 11:45'!outerScope	^ outerScope! !!MiniScope methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/9/2015 10:10'!bindings: anObject	bindings := anObject! !!MiniScope methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/9/2015 10:10'!outerScope: anObject	outerScope := anObject! !!MiniScope methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/6/2015 11:45'!bindings	^ bindings! !!MiniScope methodsFor: 'binding' stamp: 'DesireeTrepanier 11/12/2015 11:25'!bind: aNameto: aValue	(self bindings includesKey:aName) 		ifTrue:[MiniMultipleDeclarationError signal:'Cannot declare multiple bindings of the same name']		ifFalse:[self bindings at:aName put:aValue]! !!MiniScope methodsFor: 'binding' stamp: 'DesireeTrepanier 11/9/2015 11:52'!hasBindingFor: aName	^(self bindings includesKey:aName) or:[self outerScope hasBindingFor:aName]! !!MiniScope methodsFor: 'binding' stamp: 'DesireeTrepanier 11/9/2015 12:02'!rebind: aNameto: aValue	(self bindings includesKey:aName)		ifTrue:[self bindings at:aName put:aValue]		ifFalse:[self outerScope rebind:aName to:aValue]! !!MiniScope methodsFor: 'binding' stamp: 'DesireeTrepanier 11/12/2015 11:13'!bindingFor: aName	^ (self bindings at:aName ifAbsent:[self outerScope bindingFor:aName])! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniScope class	instanceVariableNames: ''!!MiniScope class methodsFor: 'instance creation' stamp: 'DesireeTrepanier 11/9/2015 11:08'!globalScope		| aMiniScope |	aMiniScope := MiniScope new.	aMiniScope outerScope: MiniVoidScope default.	aMiniScope bindings: Dictionary new.	^ aMiniScope! !!MiniScope class methodsFor: 'instance creation' stamp: 'DesireeTrepanier 11/9/2015 13:58'!newScopeIn: aName	| aMiniScope |	aMiniScope := MiniScope new.	aMiniScope bindings: Dictionary new.	aMiniScope outerScope: aName.	^aMiniScope! !MiniError subclass: #MiniUndeclaredError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Impl'!MiniError subclass: #MiniVoidScopeError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Impl'!MiniError subclass: #MiniMultipleDeclarationError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Impl'!Object subclass: #MiniEnvironment	instanceVariableNames: 'variableScope procedureScope'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Impl'!!MiniEnvironment methodsFor: 'binding' stamp: 'DesireeTrepanier 11/11/2015 12:18'!variableNamed: aNameput: aValue	variableScope rebind: aName to: aValue! !!MiniEnvironment methodsFor: 'binding' stamp: 'DesireeTrepanier 11/11/2015 12:16'!addProcedure: aNamevalue: aValue	procedureScope bind: aName to: aValue! !!MiniEnvironment methodsFor: 'binding' stamp: 'DesireeTrepanier 11/11/2015 12:16'!addVariable: aNamevalue: aValue	variableScope bind: aName to: aValue! !!MiniEnvironment methodsFor: 'binding' stamp: 'DesireeTrepanier 11/11/2015 12:19'!procedureNamed: aName	^ procedureScope bindingFor: aName! !!MiniEnvironment methodsFor: 'binding' stamp: 'DesireeTrepanier 11/11/2015 12:19'!variableNamed: aName	^ variableScope bindingFor: aName! !!MiniEnvironment methodsFor: 'as yet unclassified' stamp: 'DesireeTrepanier 11/11/2015 12:26'!activateScope	variableScope := MiniScope newScopeIn: variableScope.	procedureScope := MiniScope newScopeIn: procedureScope! !!MiniEnvironment methodsFor: 'as yet unclassified' stamp: 'DesireeTrepanier 11/11/2015 12:27'!deactivateScope	variableScope := variableScope outerScope.	procedureScope := procedureScope outerScope! !!MiniEnvironment methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/11/2015 12:14'!variableScope	^ variableScope! !!MiniEnvironment methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/11/2015 12:14'!procedureScope	^ procedureScope! !!MiniEnvironment methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/11/2015 12:14'!procedureScope: anObject	procedureScope := anObject! !!MiniEnvironment methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/11/2015 12:14'!variableScope: anObject	variableScope := anObject! !!MiniEnvironment methodsFor: 'initializing' stamp: 'DesireeTrepanier 11/11/2015 12:13'!initialize	super initialize.	variableScope := MiniScope globalScope.	procedureScope := MiniScope globalScope.! !MiniScope subclass: #MiniVoidScope	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Impl'!!MiniVoidScope methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/9/2015 11:36'!outerScope		^self! !!MiniVoidScope methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/9/2015 11:37'!bindings: aName	MiniVoidScopeError signal:'Void scopes do not have bindings.'! !!MiniVoidScope methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/9/2015 11:40'!outerScope: aName		MiniVoidScopeError signal:'Void scopes do not have outerScopes.'! !!MiniVoidScope methodsFor: 'binding' stamp: 'DesireeTrepanier 11/9/2015 09:13'!rebind: aNameto: aValue	MiniVoidScopeError signal: 'May not (re)bind in the void scope.'! !!MiniVoidScope methodsFor: 'binding' stamp: 'DesireeTrepanier 11/9/2015 09:11'!bindingFor: aName	MiniUndeclaredError signal: 'No bindings in the void scope.'! !!MiniVoidScope methodsFor: 'binding' stamp: 'DesireeTrepanier 11/5/2015 11:50'!bind: aNameto: aValue	MiniVoidScopeError signal: 'May not bind in the void scope.'! !!MiniVoidScope methodsFor: 'binding' stamp: 'DesireeTrepanier 11/9/2015 09:12'!hasBindingFor: aName	^false! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniVoidScope class	instanceVariableNames: 'default'!!MiniVoidScope class methodsFor: 'accessing' stamp: 'DesireeTrepanier 11/9/2015 11:41'!default	default isNil ifTrue:[default := super new].	^default! !!MiniVoidScope class methodsFor: 'instance creation' stamp: 'DesireeTrepanier 11/5/2015 11:42'!globalScope	ShouldNotImplement signal:'MiniVoidScope does not understand globalScope'! !!MiniVoidScope class methodsFor: 'instance creation' stamp: 'DesireeTrepanier 11/5/2015 11:43'!newScopeIn: aScope	ShouldNotImplement signal:'MiniVoidScope does not understand newScopeIn'! !!MiniVoidScope class methodsFor: 'instance creation' stamp: 'DesireeTrepanier 11/6/2015 11:49'!new	ShouldNotImplement signal:'MiniVoidScope is a singleton.'! !